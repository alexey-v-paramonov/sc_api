# Generated by Django 4.2.5 on 2024-02-18 09:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HostedRadio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Radio station name')),
                ('ts_created', models.DateTimeField(auto_now_add=True, verbose_name='Creation timestamp')),
                ('domain', models.CharField(blank=True, max_length=255, null=True, verbose_name='Domain name')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Pending'), (1, 'Checking'), (2, 'Ready'), (3, 'Being created'), (4, 'Being deleted'), (5, 'Suspended'), (6, 'Error')], default=0, verbose_name='Status')),
                ('is_blocked', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('debug_msg', models.TextField(blank=True, null=True)),
                ('login', models.CharField(blank=True, max_length=32, null=True, validators=[django.core.validators.RegexValidator('^[a-z_]([a-z0-9_-]{0,31}|[a-z0-9_-]{0,30}\\$)$')], verbose_name='Hosting login name')),
                ('initial_audio_format', models.CharField(blank=True, choices=[('mp3', 'Mp3'), ('aac++', 'AAC++'), ('flac', 'FLAC')], max_length=10, null=True, verbose_name='Audio format')),
                ('initial_bitrate', models.PositiveIntegerField(blank=True, null=True, verbose_name='Bitrate')),
                ('initial_listeners', models.PositiveIntegerField(blank=True, null=True, verbose_name='Maximum number of listeners')),
                ('initial_du', models.PositiveIntegerField(blank=True, null=True, verbose_name='Disk quota')),
                ('is_demo', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RadioServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('nodename', models.CharField(max_length=255, verbose_name='Node subdomain name')),
                ('country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country')),
                ('provider', models.CharField(blank=True, max_length=255, null=True, verbose_name='Hosting provider')),
                ('available', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SelfHostedRadio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Radio station name')),
                ('ts_created', models.DateTimeField(auto_now_add=True, verbose_name='Creation timestamp')),
                ('domain', models.CharField(blank=True, max_length=255, null=True, verbose_name='Domain name')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Pending'), (1, 'Checking'), (2, 'Ready'), (3, 'Being created'), (4, 'Being deleted'), (5, 'Suspended'), (6, 'Error')], default=0, verbose_name='Status')),
                ('is_blocked', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('debug_msg', models.TextField(blank=True, null=True)),
                ('ip', models.GenericIPAddressField(verbose_name='IP Address')),
                ('ssh_username', models.CharField(blank=True, max_length=255, null=True, verbose_name='SSH user username')),
                ('ssh_password', models.CharField(blank=True, max_length=255, null=True, verbose_name='SSH user password')),
                ('ssh_port', models.PositiveIntegerField(default=22, verbose_name='SSH port')),
                ('custom_price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HostedRadioService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.PositiveSmallIntegerField(choices=[('mp3', 'Mp3'), ('aac++', 'AAC++'), ('flac', 'FLAC')], verbose_name='Service type')),
                ('channel_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Stream channel ID')),
                ('bitrate', models.PositiveIntegerField(blank=True, null=True, verbose_name='Bitrate')),
                ('listeners', models.PositiveIntegerField(blank=True, null=True, verbose_name='Maximum number of listeners')),
                ('du', models.PositiveIntegerField(blank=True, null=True, verbose_name='Disk quota')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('radio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='radio.hostedradio')),
            ],
        ),
        migrations.AddField(
            model_name='hostedradio',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='radio.radioserver'),
        ),
        migrations.AddField(
            model_name='hostedradio',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner'),
        ),
        migrations.AlterUniqueTogether(
            name='hostedradio',
            unique_together={('login', 'server')},
        ),
    ]
